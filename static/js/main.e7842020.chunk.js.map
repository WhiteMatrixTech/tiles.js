{"version":3,"sources":["lib/grids/Cell.js","lib/grids/HexGrid.js","lib/grids/SqrGrid.js","lib/grids/Tile.js","lib/lib/LinkedList.js","lib/lib/Signal.js","lib/pathing/AStarFinder.js","lib/pathing/PathUtil.js","lib/utils/Loader.js","lib/utils/MouseCaster.js","lib/utils/Scene.js","lib/utils/SelectionManager.js","lib/utils/Tools.js","lib/Board.js","lib/tm.js","App.js","index.js"],"names":["Cell","q","r","s","h","this","tile","userData","walkable","_calcCost","_priority","_visited","_parent","uniqueID","TM","LinkedList","generateID","cell","HexGrid","config","type","HEX","size","cellSize","cells","numCells","extrudeSettings","autogenerated","i","verts","push","_createVertex","cellShape","THREE","moveTo","x","y","lineTo","autoClose","cellGeo","vertices","verticesNeedUpdate","cellShapeGeo","_cellWidth","_cellLength","SQRT3","_hashDelimeter","_directions","_diagonals","_list","_vec3","_cel","_conversionVec","_geoCache","_matCache","z","pos","TWO_THIRDS","set","_cubeRound","cellToHash","diagonal","filter","n","l","length","copy","add","c","Tools","randomInt","cellA","cellB","d","Math","max","abs","cb","scale","material","height","geo","amount","Tile","geometry","t","tiles","settings","tileScale","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","merge","generateTile","position","cellToPixel","overlayObj","overlayMat","createPointsGeometry","line","rotation","DEG_TO_RAD","dispose","url","scope","self","getJSON","callback","json","fromJSON","call","cache","k","angle","TAU","cos","sin","rx","round","ry","rz","xDiff","yDiff","zDiff","SqrGrid","SQR","_fullCellSize","half","ceil","Error","color","randomizeRGB","objectType","TILE","entity","selected","highlight","mesh","structure","emissive","_emissive","getHex","setHex","deselect","select","parent","remove","Node","obj","next","prev","free","first","last","objToNodeMap","Date","now","floor","random","sortArray","node","err","console","error","newObj","addNode","showDebug","dump","getNode","b","a","oldCNext","moveUp","compare","clear","sort","list","msg","log","toString","slice","SignalBinding","signal","listener","isOnce","listenerContext","priority","_listener","context","paramsArr","handlerReturn","params","active","concat","apply","detach","isBound","Signal","_bindings","_prevParams","fnName","replace","binding","prevIndex","_indexOfListener","_addBinding","memorize","execute","splice","cur","validateListener","_registerListener","_destroy","_shouldPropagate","bindings","Array","prototype","arguments","removeAll","getNumListeners","AStarFinder","finderConfig","allowDiagonal","heuristicFilter","startNode","endNode","heuristic","grid","current","costSoFar","neighbors","clearPath","shift","PathUtil","backtrace","getNeighbors","distance","nodeA","nodeB","path","reverse","pathA","pathB","dx","dy","sum","sqrt","x0","y0","x1","y1","sx","sy","e2","coord0","coord1","interpolated","interpolatedLen","j","expanded","len","interpolate","ex","ey","newPath","lastValidCoord","coord","testCoord","blocked","isWalkableAt","lx","ly","ldx","ldy","sq","compressed","px","py","Loader","manager","imageLoader","crossOrigin","init","warn","loadTexture","mapping","onLoad","onError","texture","load","image","needsUpdate","evt","sourceFile","MouseCaster","group","camera","element","down","rightDown","pickedObject","selectedObject","allHits","ctrl","wheel","screenPosition","_camera","_raycaster","_preventDefault","document","addEventListener","_onDocumentMouseMove","bind","_onDocumentMouseDown","_onDocumentMouseUp","_onMouseWheel","setFromCamera","hit","intersects","intersectObject","object","dispatch","point","window","event","preventDefault","shiftKey","ctrlKey","which","clientX","innerWidth","clientY","innerHeight","stopPropagation","delta","undefined","wheelDelta","detail","OVER","OUT","DOWN","UP","CLICK","WHEEL","Scene","sceneConfig","controlConfig","sceneSettings","body","alpha","antialias","clearColor","sortObjects","fog","light","lightPosition","cameraType","cameraPosition","orthoZoom","controlSettings","minDistance","maxDistance","zoomSpeed","noZoom","renderer","setClearColor","width","container","normalize","contolled","controls","OrbitControls","domElement","left","right","top","bottom","aspect","updateProjectionMatrix","setSize","attachTo","style","setPixelRatio","devicePixelRatio","appendChild","update","render","lookAt","SelectionManager","mouse","onSelect","onDeselect","toggleSelection","onMouse","fireSignal","clearSelection","clamp","val","min","sign","v","getShortRotation","PI","isPlainObject","nodeType","constructor","Object","hasOwnProperty","target","src","array","isArray","dst","forEach","e","indexOf","keys","key","nwf","system","Performance","elapsedTime","performance","empty","lastChild","removeChild","radixSort","arr","idxBegin","idxEnd","bit","idx","idxOnes","mask","tmp","base","range","rgb","split","parseInt","substring","xhr","XMLHttpRequest","uri","onreadystatechange","status","statusText","JSON","parse","responseText","open","setRequestHeader","send","Board","tileGroup","overlay","finder","setGrid","heightOffset","snapTileToGrid","children","pixelToCell","startTile","endTile","findPath","newGrid","removeAllTiles","mat","opacity","generateOverlay","reset","generateTiles","VERSION","RAD_TO_DEG","ENT","STR","ABS","App","scene","getElementById","gridSpace","generate","board","generateTilemap","focusOn","toggle","requestAnimationFrame","className","id","React","Component","ReactDOM"],"mappings":"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","file":"static/js/main.e7842020.chunk.js","sourcesContent":["import TM from '../tm';\n\nexport default class Cell {\n  constructor(q, r, s, h) {\n    this.q = q || 0; // x grid coordinate (using different letters so that it won't be confused with pixel/world coordinates)\n    this.r = r || 0; // y grid coordinate\n    this.s = s || 0; // z grid coordinate\n    this.h = h || 1; // 3D height of the cell, used by visual representation and pathfinder, cannot be less than 1\n    this.tile = null; // optional link to the visual representation's class instance\n    this.userData = {}; // populate with any extra data needed in your game\n    this.walkable = true; // if true, pathfinder will use as a through node\n\n    // rest of these are used by the pathfinder and overwritten at runtime, so don't touch\n    this._calcCost = 0;\n    this._priority = 0;\n    this._visited = false;\n    this._parent = null;\n    this.uniqueID = TM.LinkedList.generateID();\n  }\n  set(q, r, s) {\n    this.q = q;\n    this.r = r;\n    this.s = s;\n    return this;\n  }\n\n  copy(cell) {\n    this.q = cell.q;\n    this.r = cell.r;\n    this.s = cell.s;\n    this.h = cell.h;\n    this.tile = cell.tile || null;\n    this.userData = cell.userData || {};\n    this.walkable = cell.walkable;\n    return this;\n  }\n\n  add(cell) {\n    this.q += cell.q;\n    this.r += cell.r;\n    this.s += cell.s;\n    return this;\n  }\n\n  equals(cell) {\n    return this.q === cell.q && this.r === cell.r && this.s === cell.s;\n  }\n}","import TM from '../tm';\nimport * as THREE from 'three';\n/*\n\tGraph of hexagons. Handles grid cell management (placement math for eg pathfinding, range, etc) and grid conversion math.\n\t[Cube/axial coordinate system](http://www.redblobgames.com/grids/hexagons/), \"flat top\" version only. Since this is 3D, just rotate your camera for pointy top maps.\n\tInterface:\n\ttype\n\tsize - number of cells (in radius); only used if the map is generated\n\tcellSize\n\tcells - a hash so we can have sparse maps\n\tnumCells\n\textrudeSettings\n\tautogenerated\n\tcellShape\n\tcellGeo\n\tcellShapeGeo\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\n// 'utils/Loader', 'graphs/Hex', 'utils/Tools'\nexport default class HexGrid {\n\n  constructor(config) {\n    config = config || {};\n    /*  ______________________________________________\n      GRID INTERFACE:\n    */\n    this.type = TM.HEX;\n    this.size = 5; // only used for generated maps\n    this.cellSize = typeof config.cellSize === 'undefined' ? 10 : config.cellSize;\n    this.cells = {};\n    this.numCells = 0;\n\n    this.extrudeSettings = null;\n    this.autogenerated = false;\n\n    // create base shape used for building geometry\n    var i, verts = [];\n    // create the skeleton of the hex\n    for (i = 0; i < 6; i++) {\n      verts.push(this._createVertex(i));\n    }\n    // copy the verts into a shape for the geometry to use\n    this.cellShape = new THREE.Shape();\n    this.cellShape.moveTo(verts[0].x, verts[0].y);\n    for (i = 1; i < 6; i++) {\n      this.cellShape.lineTo(verts[i].x, verts[i].y);\n    }\n    this.cellShape.lineTo(verts[0].x, verts[0].y);\n    this.cellShape.autoClose = true;\n\n    this.cellGeo = new THREE.Geometry();\n    this.cellGeo.vertices = verts;\n    this.cellGeo.verticesNeedUpdate = true;\n\n    this.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape);\n\n    /*  ______________________________________________\n      PRIVATE\n    */\n\n    this._cellWidth = this.cellSize * 2;\n    this._cellLength = (TM.SQRT3 * 0.5) * this._cellWidth;\n    this._hashDelimeter = '.';\n    // pre-computed permutations\n    this._directions = [new TM.Cell(+1, -1, 0), new TM.Cell(+1, 0, -1), new TM.Cell(0, +1, -1),\n    new TM.Cell(-1, +1, 0), new TM.Cell(-1, 0, +1), new TM.Cell(0, -1, +1)];\n    this._diagonals = [new TM.Cell(+2, -1, -1), new TM.Cell(+1, +1, -2), new TM.Cell(-1, +2, -1),\n    new TM.Cell(-2, +1, +1), new TM.Cell(-1, -1, +2), new TM.Cell(+1, -2, +1)];\n    // cached objects\n    this._list = [];\n    this._vec3 = new THREE.Vector3();\n    this._cel = new TM.Cell();\n    this._conversionVec = new THREE.Vector3();\n    this._geoCache = [];\n    this._matCache = [];\n  }\n  /*  ________________________________________________________________________\n\t\tHigh-level functions that the Board interfaces with (all grids implement)\n\t */\n\n  // grid cell (Hex in cube coordinate space) to position in pixels/world\n  cellToPixel(cell) {\n    this._vec3.x = cell.q * this._cellWidth * 0.75;\n    this._vec3.y = cell.h;\n    this._vec3.z = -((cell.s - cell.r) * this._cellLength * 0.5);\n    return this._vec3;\n  }\n\n  pixelToCell(pos) {\n    // convert a position in world space (\"pixels\") to cell coordinates\n    var q = pos.x * (HexGrid.TWO_THIRDS / this.cellSize);\n    var r = ((-pos.x / 3) + (TM.SQRT3 / 3) * pos.z) / this.cellSize;\n    this._cel.set(q, r, -q - r);\n    return this._cubeRound(this._cel);\n  }\n\n  getCellAt(pos) {\n    // get the Cell (if any) at the passed world position\n    var q = pos.x * (HexGrid.TWO_THIRDS / this.cellSize);\n    var r = ((-pos.x / 3) + (TM.SQRT3 / 3) * pos.z) / this.cellSize;\n    this._cel.set(q, r, -q - r);\n    this._cubeRound(this._cel);\n    return this.cells[this.cellToHash(this._cel)];\n  }\n\n  getNeighbors(cell, diagonal, filter) {\n    // always returns an array\n    var i, n, l = this._directions.length;\n    this._list.length = 0;\n    for (i = 0; i < l; i++) {\n      this._cel.copy(cell);\n      this._cel.add(this._directions[i]);\n      n = this.cells[this.cellToHash(this._cel)];\n      if (!n || (filter && !filter(cell, n))) {\n        continue;\n      }\n      this._list.push(n);\n    }\n    if (diagonal) {\n      for (i = 0; i < l; i++) {\n        this._cel.copy(cell);\n        this._cel.add(this._diagonals[i]);\n        n = this.cells[this.cellToHash(this._cel)];\n        if (!n || (filter && !filter(cell, n))) {\n          continue;\n        }\n        this._list.push(n);\n      }\n    }\n    return this._list;\n  }\n\n  getRandomCell() {\n    var c, i = 0, x = TM.Tools.randomInt(0, this.numCells);\n    for (c in this.cells) {\n      if (i === x) {\n        return this.cells[c];\n      }\n      i++;\n    }\n    return this.cells[c];\n  }\n\n  cellToHash(cell) {\n    return cell.q + this._hashDelimeter + cell.r + this._hashDelimeter + cell.s;\n  }\n\n  distance(cellA, cellB) {\n    var d = Math.max(Math.abs(cellA.q - cellB.q), Math.abs(cellA.r - cellB.r), Math.abs(cellA.s - cellB.s));\n    d += cellB.h - cellA.h; // include vertical height\n    return d;\n  }\n\n  clearPath() {\n    var i, c;\n    for (i in this.cells) {\n      c = this.cells[i];\n      c._calcCost = 0;\n      c._priority = 0;\n      c._parent = null;\n      c._visited = false;\n    }\n  }\n\n  traverse(cb) {\n    var i;\n    for (i in this.cells) {\n      cb(this.cells[i]);\n    }\n  }\n\n  generateTile(cell, scale, material) {\n    var height = Math.abs(cell.h);\n    if (height < 1) height = 1;\n\n    var geo = this._geoCache[height];\n    if (!geo) {\n      this.extrudeSettings.amount = height;\n      geo = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings);\n      this._geoCache[height] = geo;\n    }\n\n\t\t/*mat = this._matCache[c.matConfig.mat_cache_id];\n\t\tif (!mat) { // MaterialLoader? we currently only support basic stuff though. maybe later\n\t\t\tmat.map = Loader.loadTexture(c.matConfig.imgURL);\n\t\t\tdelete c.matConfig.imgURL;\n\t\t\tmat = new THREE[c.matConfig.type](c.matConfig);\n\t\t\tthis._matCache[c.matConfig.mat_cache_id] = mat;\n\t\t}*/\n\n    var tile = new TM.Tile({\n      size: this.cellSize,\n      scale: scale,\n      cell: cell,\n      geometry: geo,\n      material: material\n    });\n\n    cell.tile = tile;\n\n    return tile;\n  }\n\n  generateTiles(config) {\n    config = config || {};\n    var tiles = [];\n    var settings = {\n      tileScale: 0.95,\n      cellSize: this.cellSize,\n      material: null,\n      extrudeSettings: {\n        amount: 1,\n        bevelEnabled: true,\n        bevelSegments: 1,\n        steps: 1,\n        bevelSize: 0.5,\n        bevelThickness: 0.5\n      }\n    }\n    settings = TM.Tools.merge(settings, config);\n\n\t\t/*if (!settings.material) {\n\t\t\tsettings.material = new THREE.MeshPhongMaterial({\n\t\t\t\tcolor: TM.Tools.randomizeRGB('30, 30, 30', 10)\n\t\t\t});\n\t\t}*/\n\n    // overwrite with any new dimensions\n    this.cellSize = settings.cellSize;\n    this._cellWidth = this.cellSize * 2;\n    this._cellLength = (TM.SQRT3 * 0.5) * this._cellWidth;\n\n    this.autogenerated = true;\n    this.extrudeSettings = settings.extrudeSettings;\n\n    var i, t, c;\n    for (i in this.cells) {\n      c = this.cells[i];\n      t = this.generateTile(c, settings.tileScale, settings.material);\n      t.position.copy(this.cellToPixel(c));\n      t.position.y = 0;\n      tiles.push(t);\n    }\n    return tiles;\n  }\n\n  // create a flat, hexagon-shaped grid\n  generate(config) {\n    config = config || {};\n    this.size = typeof config.size === 'undefined' ? this.size : config.size;\n    var x, y, z, c;\n    for (x = -this.size; x < this.size + 1; x++) {\n      for (y = -this.size; y < this.size + 1; y++) {\n        z = -x - y;\n        if (Math.abs(x) <= this.size && Math.abs(y) <= this.size && Math.abs(z) <= this.size) {\n          c = new TM.Cell(x, y, z);\n          this.add(c);\n        }\n      }\n    }\n  }\n\n  generateOverlay(size, overlayObj, overlayMat) {\n    var x, y, z;\n    var geo = this.cellShape.createPointsGeometry();\n    for (x = -size; x < size + 1; x++) {\n      for (y = -size; y < size + 1; y++) {\n        z = -x - y;\n        if (Math.abs(x) <= size && Math.abs(y) <= size && Math.abs(z) <= size) {\n          this._cel.set(x, y, z); // define the cell\n          var line = new THREE.Line(geo, overlayMat);\n          line.position.copy(this.cellToPixel(this._cel));\n          line.rotation.x = 90 * TM.DEG_TO_RAD;\n          overlayObj.add(line);\n        }\n      }\n    }\n  }\n\n  add(cell) {\n    var h = this.cellToHash(cell);\n    if (this.cells[h]) {\n      // console.warn('A cell already exists there');\n      return;\n    }\n    this.cells[h] = cell;\n    this.numCells++;\n\n    return cell;\n  }\n\n  remove(cell) {\n    var h = this.cellToHash(cell);\n    if (this.cells[h]) {\n      delete this.cells[h];\n      this.numCells--;\n    }\n  }\n\n  dispose() {\n    this.cells = null;\n    this.numCells = 0;\n    this.cellShape = null;\n    this.cellGeo.dispose();\n    this.cellGeo = null;\n    this.cellShapeGeo.dispose();\n    this.cellShapeGeo = null;\n    this._list = null;\n    this._vec3 = null;\n    this._conversionVec = null;\n    this._geoCache = null;\n    this._matCache = null;\n  }\n\n\t/*\n\t\tLoad a grid from a parsed json object.\n\t\tjson = {\n\t\t\textrudeSettings,\n\t\t\tsize,\n\t\t\tcellSize,\n\t\t\tautogenerated,\n\t\t\tcells: [],\n\t\t\tmaterials: [\n\t\t\t\t{\n\t\t\t\t\tcache_id: 0,\n\t\t\t\t\ttype: 'MeshLambertMaterial',\n\t\t\t\t\tcolor, ambient, emissive, reflectivity, refractionRatio, wrapAround,\n\t\t\t\t\timgURL: url\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tcacheId: 1, ...\n\t\t\t\t}\n\t\t\t\t...\n\t\t\t]\n\t\t}\n\t*/\n  load(url, cb, scope) {\n    var self = this;\n    TM.Tools.getJSON({\n      url: url,\n      callback: function (json) {\n        self.fromJSON(json);\n        cb.call(scope || null, json);\n      },\n      cache: false,\n      scope: self\n    });\n  }\n\n  fromJSON(json) {\n    var i, c;\n    var cells = json.cells;\n\n    this.cells = {};\n    this.numCells = 0;\n\n    this.size = json.size;\n    this.cellSize = json.cellSize;\n    this._cellWidth = this.cellSize * 2;\n    this._cellLength = (TM.SQRT3 * 0.5) * this._cellWidth;\n\n    this.extrudeSettings = json.extrudeSettings;\n    this.autogenerated = json.autogenerated;\n\n    for (i = 0; i < cells.length; i++) {\n      c = new TM.Cell();\n      c.copy(cells[i]);\n      this.add(c);\n    }\n  }\n\n  toJSON() {\n    var json = {\n      size: this.size,\n      cellSize: this.cellSize,\n      extrudeSettings: this.extrudeSettings,\n      autogenerated: this.autogenerated\n    };\n    var cells = [];\n    var c, k;\n\n    for (k in this.cells) {\n      c = this.cells[k];\n      cells.push({\n        q: c.q,\n        r: c.r,\n        s: c.s,\n        h: c.h,\n        walkable: c.walkable,\n        userData: c.userData\n      });\n    }\n    json.cells = cells;\n\n    return json;\n  }\n\n\t/*  ________________________________________________________________________\n\t\tHexagon-specific conversion math\n\t\tMostly commented out because they're inlined whenever possible to increase performance.\n\t\tThey're still here for reference.\n\t */\n\n  _createVertex(i) {\n    var angle = (TM.TAU / 6) * i;\n    return new THREE.Vector3((this.cellSize * Math.cos(angle)), (this.cellSize * Math.sin(angle)), 0);\n  }\n\n\t/*_pixelToAxial: function(pos) {\n\t\tvar q, r; // = x, y\n\t\tq = pos.x * ((2/3) / this.cellSize);\n\t\tr = ((-pos.x / 3) + (TM.SQRT3/3) * pos.y) / this.cellSize;\n\t\tthis._cel.set(q, r, -q-r);\n\t\treturn this._cubeRound(this._cel);\n\t}*/\n\n\t/*_axialToCube: function(h) {\n\t\treturn {\n\t\t\tq: h.q,\n\t\t\tr: h.r,\n\t\t\ts: -h.q - h.r\n\t\t};\n\t}*/\n\n\t/*_cubeToAxial: function(cell) {\n\t\treturn cell; // yep\n\t}*/\n\n\t/*_axialToPixel: function(cell) {\n\t\tvar x, y; // = q, r\n\t\tx = cell.q * this._cellWidth * 0.75;\n\t\ty = (cell.s - cell.r) * this._cellLength * 0.5;\n\t\treturn {x: x, y: -y};\n\t}*/\n\n\t/*_hexToPixel: function(h) {\n\t\tvar x, y; // = q, r\n\t\tx = this.cellSize * 1.5 * h.x;\n\t\ty = this.cellSize * TM.SQRT3 * (h.y + (h.x * 0.5));\n\t\treturn {x: x, y: y};\n\t}*/\n\n\t/*_axialRound: function(h) {\n\t\treturn this._cubeRound(this.axialToCube(h));\n\t}*/\n\n  _cubeRound(h) {\n    var rx = Math.round(h.q);\n    var ry = Math.round(h.r);\n    var rz = Math.round(h.s);\n\n    var xDiff = Math.abs(rx - h.q);\n    var yDiff = Math.abs(ry - h.r);\n    var zDiff = Math.abs(rz - h.s);\n\n    if (xDiff > yDiff && xDiff > zDiff) {\n      rx = -ry - rz;\n    }\n    else if (yDiff > zDiff) {\n      ry = -rx - rz;\n    }\n    else {\n      rz = -rx - ry;\n    }\n\n    return this._cel.set(rx, ry, rz);\n  }\n\n\t/*_cubeDistance: function(a, b) {\n\t\treturn Math.max(Math.abs(a.q - b.q), Math.abs(a.r - b.r), Math.abs(a.s - b.s));\n\t}*/\n}\n\nHexGrid.TWO_THIRDS = 2 / 3;","import TM from '../tm';\nimport * as THREE from 'three';\n/*\n\tGraph of squares. Handles grid cell management (placement math for eg pathfinding, range, etc) and grid conversion math.\n\tInterface:\n\ttype\n\tsize - number of cells (in radius); only used if the map is generated\n\tcellSize\n\tcells - a hash so we can have sparse maps\n\tnumCells\n\textrudeSettings\n\tautogenerated\n\tcellShape\n\tcellGeo\n\tcellShapeGeo\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nexport default class SqrGrid {\n  constructor(config) {\n    config = config || {};\n    /*  ______________________________________________\n      GRID INTERFACE:\n    */\n    this.type = TM.SQR;\n    this.size = 5; // only used for generated maps\n    this.cellSize = typeof config.cellSize === 'undefined' ? 10 : config.cellSize;\n    this.cells = {};\n    this.numCells = 0;\n\n    this.extrudeSettings = null;\n    this.autogenerated = false;\n\n    // create base shape used for building geometry\n    var verts = [];\n    verts.push(new THREE.Vector3());\n    verts.push(new THREE.Vector3(-this.cellSize, this.cellSize));\n    verts.push(new THREE.Vector3(this.cellSize, this.cellSize));\n    verts.push(new THREE.Vector3(this.cellSize, -this.cellSize));\n    // copy the verts into a shape for the geometry to use\n    this.cellShape = new THREE.Shape();\n    this.cellShape.moveTo(-this.cellSize, -this.cellSize);\n    this.cellShape.lineTo(-this.cellSize, this.cellSize);\n    this.cellShape.lineTo(this.cellSize, this.cellSize);\n    this.cellShape.lineTo(this.cellSize, -this.cellSize);\n    this.cellShape.lineTo(-this.cellSize, -this.cellSize);\n\n    this.cellGeo = new THREE.Geometry();\n    this.cellGeo.vertices = verts;\n    this.cellGeo.verticesNeedUpdate = true;\n\n    this.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape);\n\n    /*  ______________________________________________\n      PRIVATE\n    */\n\n    this._fullCellSize = this.cellSize * 2;\n    this._hashDelimeter = '.';\n    // pre-computed permutations\n    this._directions = [new TM.Cell(+1, 0, 0), new TM.Cell(0, -1, 0),\n    new TM.Cell(-1, 0, 0), new TM.Cell(0, +1, 0)];\n    this._diagonals = [new TM.Cell(-1, -1, 0), new TM.Cell(-1, +1, 0),\n    new TM.Cell(+1, +1, 0), new TM.Cell(+1, -1, 0)];\n    // cached objects\n    this._list = [];\n    this._vec3 = new THREE.Vector3();\n    this._cel = new TM.Cell();\n    this._conversionVec = new THREE.Vector3();\n    this._geoCache = [];\n    this._matCache = [];\n  }\n  /*\n\t\t________________________________________________________________________\n\t\tHigh-leves that the Board interfaces with (all grids implement)\n\t */\n\n  cellToPixel(cell) {\n    this._vec3.x = cell.q * this._fullCellSize;\n    this._vec3.y = cell.h;\n    this._vec3.z = cell.r * this._fullCellSize;\n    return this._vec3;\n  }\n\n  pixelToCell(pos) {\n    var q = Math.round(pos.x / this._fullCellSize);\n    var r = Math.round(pos.z / this._fullCellSize);\n    return this._cel.set(q, r, 0);\n  }\n\n  getCellAt(pos) {\n    var q = Math.round(pos.x / this._fullCellSize);\n    var r = Math.round(pos.z / this._fullCellSize);\n    this._cel.set(q, r);\n    return this.cells[this.cellToHash(this._cel)];\n  }\n\n  getNeighbors(cell, diagonal, filter) {\n    // always returns an array\n    var i, n, l = this._directions.length;\n    this._list.length = 0;\n    for (i = 0; i < l; i++) {\n      this._cel.copy(cell);\n      this._cel.add(this._directions[i]);\n      n = this.cells[this.cellToHash(this._cel)];\n      if (!n || (filter && !filter(cell, n))) {\n        continue;\n      }\n      this._list.push(n);\n    }\n    if (diagonal) {\n      for (i = 0; i < l; i++) {\n        this._cel.copy(cell);\n        this._cel.add(this._diagonals[i]);\n        n = this.cells[this.cellToHash(this._cel)];\n        if (!n || (filter && !filter(cell, n))) {\n          continue;\n        }\n        this._list.push(n);\n      }\n    }\n    return this._list;\n  }\n\n  getRandomCell() {\n    var c, i = 0, x = TM.Tools.randomInt(0, this.numCells);\n    for (c in this.cells) {\n      if (i === x) {\n        return this.cells[c];\n      }\n      i++;\n    }\n    return this.cells[c];\n  }\n\n  cellToHash(cell) {\n    return cell.q + this._hashDelimeter + cell.r; // s is not used in a square grid\n  }\n\n  distance(cellA, cellB) {\n    var d = Math.max(Math.abs(cellA.q - cellB.q), Math.abs(cellA.r - cellB.r));\n    d += cellB.h - cellA.h; // include vertical size\n    return d;\n  }\n\n  clearPath() {\n    var i, c;\n    for (i in this.cells) {\n      c = this.cells[i];\n      c._calcCost = 0;\n      c._priority = 0;\n      c._parent = null;\n      c._visited = false;\n    }\n  }\n\n  traverse(cb) {\n    var i;\n    for (i in this.cells) {\n      cb(this.cells[i]);\n    }\n  }\n\n  generateTile(cell, scale, material) {\n    var height = Math.abs(cell.h);\n    if (height < 1) height = 1;\n\n    var geo = this._geoCache[height];\n    if (!geo) {\n      this.extrudeSettings.amount = height;\n      geo = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings);\n      this._geoCache[height] = geo;\n    }\n\n    /*mat = this._matCache[c.matConfig.mat_cache_id];\n    if (!mat) { // MaterialLoader? we currently only support basic stuff though. maybe later\n      mat.map = Loader.loadTexture(c.matConfig.imgURL);\n      delete c.matConfig.imgURL;\n      mat = new THREE[c.matConfig.type](c.matConfig);\n      this._matCache[c.matConfig.mat_cache_id] = mat;\n    }*/\n\n    var t = new TM.Tile({\n      size: this.cellSize,\n      scale: scale,\n      cell: cell,\n      geometry: geo,\n      material: material\n    });\n\n    cell.tile = t;\n\n    return t;\n  }\n\n  generateTiles(config) {\n    config = config || {};\n    var tiles = [];\n    var settings = {\n      tileScale: 0.95,\n      cellSize: this.cellSize,\n      material: null,\n      extrudeSettings: {\n        amount: 1,\n        bevelEnabled: true,\n        bevelSegments: 1,\n        steps: 1,\n        bevelSize: 0.5,\n        bevelThickness: 0.5\n      }\n    }\n    settings = TM.Tools.merge(settings, config);\n\n    /*if (!settings.material) {\n      settings.material = new THREE.MeshPhongMaterial({\n        color: TM.Tools.randomizeRGB('30, 30, 30', 10)\n      });\n    }*/\n\n    // overwrite with any new dimensions\n    this.cellSize = settings.cellSize;\n    this._fullCellSize = this.cellSize * 2;\n\n    this.autogenerated = true;\n    this.extrudeSettings = settings.extrudeSettings;\n\n    var i, t, c;\n    for (i in this.cells) {\n      c = this.cells[i];\n      t = this.generateTile(c, settings.tileScale, settings.material);\n      t.position.copy(this.cellToPixel(c));\n      t.position.y = 0;\n      tiles.push(t);\n    }\n    return tiles;\n  }\n\n  // create a flat, square-shaped grid\n  generate(config) {\n    config = config || {};\n    this.size = typeof config.size === 'undefined' ? this.size : config.size;\n    var x, y, c;\n    var half = Math.ceil(this.size / 2);\n    for (x = -half; x < half; x++) {\n      for (y = -half; y < half; y++) {\n        c = new TM.Cell(x, y + 1);\n        this.add(c);\n      }\n    }\n  }\n\n  generateOverlay(size, overlayObj, overlayMat) {\n    var x, y;\n    var half = Math.ceil(size / 2);\n    for (x = -half; x < half; x++) {\n      for (y = -half; y < half; y++) {\n        this._cel.set(x, y); // define the cell\n        var line = new THREE.Line(this.cellGeo, overlayMat);\n        line.position.copy(this.cellToPixel(this._cel));\n        line.rotation.x = 90 * TM.DEG_TO_RAD;\n        overlayObj.add(line);\n      }\n    }\n  }\n\n  add(cell) {\n    var h = this.cellToHash(cell);\n    if (this.cells[h]) {\n      // console.warn('A cell already exists there');\n      return;\n    }\n    this.cells[h] = cell;\n    this.numCells++;\n\n    return cell;\n  }\n\n  remove(cell) {\n    var h = this.cellToHash(cell);\n    if (this.cells[h]) {\n      delete this.cells[h];\n      this.numCells--;\n    }\n  }\n\n  dispose() {\n    this.cells = null;\n    this.numCells = 0;\n    this.cellShape = null;\n    this.cellGeo.dispose();\n    this.cellGeo = null;\n    this.cellShapeGeo.dispose();\n    this.cellShapeGeo = null;\n    this._list = null;\n    this._vec3 = null;\n    this._conversionVec = null;\n    this._geoCache = null;\n    this._matCache = null;\n  }\n\n  /*\n    Load a grid from a parsed json object.\n    json = {\n      extrudeSettings,\n      size,\n      cellSize,\n      autogenerated,\n      cells: [],\n      materials: [\n        {\n          cache_id: 0,\n          type: 'MeshLambertMaterial',\n          color, ambient, emissive, reflectivity, refractionRatio, wrapAround,\n          imgURL: url\n        }\n        {\n          cacheId: 1, ...\n        }\n        ...\n      ]\n    }\n  */\n  load(url, callback, scope) {\n    TM.Tools.getJSON({\n      url: url,\n      callback(json) {\n        this.fromJSON(json);\n        callback.call(scope || null, json);\n      },\n      cache: false,\n      scope: this\n    });\n  }\n\n  fromJSON(json) {\n    var i, c;\n    var cells = json.cells;\n\n    this.cells = {};\n    this.numCells = 0;\n\n    this.size = json.size;\n    this.cellSize = json.cellSize;\n    this._fullCellSize = this.cellSize * 2;\n    this.extrudeSettings = json.extrudeSettings;\n    this.autogenerated = json.autogenerated;\n\n    for (i = 0; i < cells.length; i++) {\n      c = new TM.Cell();\n      c.copy(cells[i]);\n      this.add(c);\n    }\n  }\n\n  toJSON() {\n    var json = {\n      size: this.size,\n      cellSize: this.cellSize,\n      extrudeSettings: this.extrudeSettings,\n      autogenerated: this.autogenerated\n    };\n    var cells = [];\n    var c, k;\n\n    for (k in this.cells) {\n      c = this.cells[k];\n      cells.push({\n        q: c.q,\n        r: c.r,\n        s: c.s,\n        h: c.h,\n        walkable: c.walkable,\n        userData: c.userData\n      });\n    }\n    json.cells = cells;\n\n    return json;\n  }\n}","import TM from '../tm';\nimport * as THREE from 'three';\n\nexport default class Tile {\n  constructor(config) {\n    config = config || {};\n    var settings = {\n      cell: null, // required TM.Cell\n      geometry: null, // required threejs geometry\n      material: null // not required but it would improve performance significantly\n    };\n    settings = TM.Tools.merge(settings, config);\n\n    if (!settings.cell || !settings.geometry) {\n      throw new Error('Missing TM.Tile configuration');\n    }\n\n    this.cell = settings.cell;\n    if (this.cell.tile && this.cell.tile !== this) this.cell.tile.dispose(); // remove whatever was there\n    this.cell.tile = this;\n\n    this.uniqueID = TM.Tools.generateID();\n\n    this.geometry = settings.geometry;\n    this.material = settings.material;\n    if (!this.material) {\n      this.material = new THREE.MeshPhongMaterial({\n        color: TM.Tools.randomizeRGB('0, 105, 148', 13)\n      });\n    }\n\n    this.objectType = TM.TILE;\n    this.entity = null;\n    this.userData = {};\n\n    this.selected = false;\n    this.highlight = '0x0084cc';\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.userData.structure = this;\n\n    // create references so we can control orientation through this (Tile), instead of drilling down\n    this.position = this.mesh.position;\n    this.rotation = this.mesh.rotation;\n\n    // rotate it to face \"up\" (the threejs coordinate space is Y+)\n    this.rotation.x = -90 * TM.DEG_TO_RAD;\n    this.mesh.scale.set(settings.scale, settings.scale, 1);\n\n    if (this.material.emissive) {\n      this._emissive = this.material.emissive.getHex();\n    }\n    else {\n      this._emissive = null;\n    }\n  }\n  select() {\n    if (this.material.emissive) {\n      this.material.emissive.setHex(this.highlight);\n    }\n    this.selected = true;\n    return this;\n  }\n\n  deselect() {\n    if (this._emissive !== null && this.material.emissive) {\n      this.material.emissive.setHex(this._emissive);\n    }\n    this.selected = false;\n    return this;\n  }\n\n  toggle() {\n    if (this.selected) {\n      this.deselect();\n    }\n    else {\n      this.select();\n    }\n    return this;\n  }\n\n  dispose() {\n    if (this.cell && this.cell.tile) this.cell.tile = null;\n    this.cell = null;\n    this.position = null;\n    this.rotation = null;\n    if (this.mesh.parent) this.mesh.parent.remove(this.mesh);\n    this.mesh.userData.structure = null;\n    this.mesh = null;\n    this.material = null;\n    this.userData = null;\n    this.entity = null;\n    this.geometry = null;\n    this._emissive = null;\n  }\n}","/*\n\tA high-speed doubly-linked list of objects. Note that for speed reasons (using a dictionary lookup of\n\tcached nodes) there can only be a single instance of an object in the list at the same time. Adding the same\n\tobject a second time will result in a silent return from the add method.\n\n\tIn order to keep a track of node links, an object must be able to identify itself with a uniqueID function.\n\n\tTo add an item use:\n\t<pre><code>\n\t\tlist.add(newItem);\n\t</code></pre>\n\t<p>\n\tYou can iterate using the first and next members, such as:\n\t<pre><code>\n\t\tvar node = list.first;\n\t\twhile (node)\n\t\t{\n\t\t\tnode.object().DOSOMETHING();\n\t\t\tnode = node.next();\n\t\t}\n\t</code></pre>\n */\n\nclass Node {\n  constructor() {\n    this.obj = null;\n    this.next = null;\n    this.prev = null;\n    this.free = true;\n  }\n}\n\nexport default class LinkedList {\n  constructor() {\n    this.first = null;\n    this.last = null;\n    this.length = 0;\n    this.objToNodeMap = {}; // a quick lookup list to map linked list nodes to objects\n    this.uniqueID = Date.now() + '' + Math.floor(Math.random() * 1000);\n\n    this.sortArray = [];\n  }\n\n  // static function for utility\n  static generateID(obj) {\n    return Math.random().toString(36).slice(2) + Date.now();\n  }\n\n  /*\n\t\t\tGet the LinkedListNode for this object.\n\t\t\t@param obj The object to get the node for\n\t\t */\n  getNode(obj) {\n    // objects added to a list must implement a uniqueID which returns a unique object identifier string\n    return this.objToNodeMap[obj.uniqueID];\n  }\n\n  /*\n    Adds a new node to the list -- typically only used internally unless you're doing something funky\n    Use add() to add an object to the list, not this.\n   */\n  addNode(obj) {\n    var node = new Node();\n    if (!obj.uniqueID) {\n      try {\n        obj.uniqueID = LinkedList.generateID();\n        // console.log('New ID: '+obj.uniqueID);\n      }\n      catch (err) {\n        console.error('[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier');\n        return null;\n      }\n    }\n\n    node.obj = obj;\n    node.free = false;\n    this.objToNodeMap[obj.uniqueID] = node;\n    return node;\n  }\n\n  swapObjects(node, newObj) {\n    this.objToNodeMap[node.obj.uniqueID] = null;\n    this.objToNodeMap[newObj.uniqueID] = node;\n    node.obj = newObj;\n  }\n\n  /*\n    Add an item to the list\n    @param obj The object to add\n   */\n  add(obj) {\n    var node = this.objToNodeMap[obj.uniqueID];\n\n    if (!node) {\n      node = this.addNode(obj);\n    }\n    else {\n      if (node.free === false) return;\n\n      // reusing a node, so we clean it up\n      // this caching of node/object pairs is the reason an object can only exist\n      // once in a list -- which also makes things faster (not always creating new node\n      // object every time objects are moving on and off the list\n      node.obj = obj;\n      node.free = false;\n      node.next = null;\n      node.prev = null;\n    }\n\n    // append this obj to the end of the list\n    if (!this.first) { // is this the first?\n      this.first = node;\n      this.last = node;\n      node.next = null; // clear just in case\n      node.prev = null;\n    }\n    else {\n      if (!this.last) {\n        throw new Error(\"[LinkedList.add] No last in the list -- that shouldn't happen here\");\n      }\n\n      // add this entry to the end of the list\n      this.last.next = node; // current end of list points to the new end\n      node.prev = this.last;\n      this.last = node;            // new object to add becomes last in the list\n      node.next = null;      // just in case this was previously set\n    }\n    this.length++;\n\n    if (this.showDebug) this.dump('after add');\n  }\n\n  has(obj) {\n    return !!this.objToNodeMap[obj.uniqueID];\n  }\n\n  /*\n    Moves this item upwards in the list\n    @param obj\n   */\n  moveUp(obj) {\n    this.dump('before move up');\n    var c = this.getNode(obj);\n    if (!c) throw \"Oops, trying to move an object that isn't in the list\";\n    if (!c.prev) return; // already first, ignore\n\n    // This operation makes C swap places with B:\n    // A <-> B <-> C <-> D\n    // A <-> C <-> B <-> D\n\n    var b = c.prev;\n    var a = b.prev;\n\n    // fix last\n    if (c == this.last) this.last = b;\n\n    var oldCNext = c.next;\n\n    if (a) a.next = c;\n    c.next = b;\n    c.prev = b.prev;\n\n    b.next = oldCNext;\n    b.prev = c;\n\n    // check to see if we are now first\n    if (this.first == b) this.first = c;\n  }\n\n  /*\n    Moves this item downwards in the list\n    @param obj\n   */\n  moveDown(obj) {\n    var b = this.getNode(obj);\n    if (!b) throw \"Oops, trying to move an object that isn't in the list\";\n    if (!b.next) return; // already last, ignore\n\n    // This operation makes B swap places with C:\n    // A <-> B <-> C <-> D\n    // A <-> C <-> B <-> D\n\n    var c = b.next;\n    this.moveUp(c.obj);\n\n    // check to see if we are now last\n    if (this.last == c) this.last = b;\n  }\n\n  /*\n    Take everything off the list and put it in an array, sort it, then put it back.\n   */\n  sort(compare) {\n    var sortArray = this.sortArray;\n    var i, l, node = this.first;\n    sortArray.length = 0;\n\n    while (node) {\n      sortArray.push(node.obj);\n      node = node.next;\n    }\n\n    this.clear();\n\n    sortArray.sort(compare);\n    // console.log(sortArray);\n    l = sortArray.length;\n    for (i = 0; i < l; i++) {\n      this.add(sortArray[i]);\n    }\n  }\n\n  /*\n    Removes an item from the list\n    @param obj The object to remove\n    @returns boolean true if the item was removed, false if the item was not on the list\n   */\n  remove(obj) {\n    var node = this.getNode(obj);\n    if (!node || node.free) {\n      return false; // ignore this error (trying to remove something not there)\n    }\n\n    // pull this object out and tie up the ends\n    if (node.prev) node.prev.next = node.next;\n    if (node.next) node.next.prev = node.prev;\n\n    // fix first and last\n    if (!node.prev) // if this was first on the list\n      this.first = node.next; // make the next on the list first (can be null)\n    if (!node.next) // if this was the last\n      this.last = node.prev; // then this node's previous becomes last\n\n    node.free = true;\n    node.prev = null;\n    node.next = null;\n\n    this.length--;\n\n    return true;\n  }\n\n  // remove the head and return it's object\n  shift() {\n    var node = this.first;\n    if (this.length === 0) return null;\n    // if (node == null || node.free == true) return null;\n\n    // pull this object out and tie up the ends\n    if (node.prev) {\n      node.prev.next = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    }\n\n    // make the next on the list first (can be null)\n    this.first = node.next;\n    if (!node.next) this.last = null; // make sure we clear this\n\n    node.free = true;\n    node.prev = null;\n    node.next = null;\n\n    this.length--;\n    return node.obj;\n  }\n\n  // remove the tail and return it's object\n  pop() {\n    var node = this.last;\n    if (this.length === 0) return null;\n\n    // pull this object out and tie up the ends\n    if (node.prev) {\n      node.prev.next = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    }\n\n    // this node's previous becomes last\n    this.last = node.prev;\n    if (!node.prev) this.first = null; // make sure we clear this\n\n    node.free = true;\n    node.prev = null;\n    node.next = null;\n\n    this.length--;\n    return node.obj;\n  }\n\n  /**\n   * Add the passed list to this list, leaving it untouched.\n   */\n  concat(list) {\n    var node = list.first;\n    while (node) {\n      this.add(node.obj);\n      node = node.next;\n    }\n  }\n\n  /**\n   * Clears the list out\n   */\n  clear() {\n    var next = this.first;\n\n    while (next) {\n      next.free = true;\n      next = next.next;\n    }\n\n    this.first = null;\n    this.length = 0;\n  }\n\n  dispose() {\n    var next = this.first;\n\n    while (next) {\n      next.obj = null;\n      next = next.next;\n    }\n    this.first = null;\n\n    this.objToNodeMap = null;\n  }\n\n  /*\n    Outputs the contents of the current list for debugging.\n   */\n  dump(msg) {\n    console.log('====================' + msg + '=====================');\n    var a = this.first;\n    while (a) {\n      console.log(\"{\" + a.obj.toString() + \"} previous=\" + (a.prev ? a.prev.obj : \"NULL\"));\n      a = a.next();\n    }\n    console.log(\"===================================\");\n    console.log(\"Last: {\" + (this.last ? this.last.obj : 'NULL') + \"} \" +\n      \"First: {\" + (this.first ? this.first.obj : 'NULL') + \"}\");\n  }\n}","class SignalBinding {\n  constructor(signal, listener, isOnce, listenerContext, priority) {\n    /**\n    * @property _listener - Handle bound to the signal.\n    * @private\n    */\n    this._listener = listener;\n\n    /**\n    * @property {boolean} isOnce - If binding should be executed just once.\n    * @private\n    */\n    this.isOnce = isOnce;\n\n    /**\n    * @property {object|undefined|null} context - Context on which listener will be executed (object that should represent the `this` variable inside listene).\n    */\n    this.context = listenerContext;\n\n    /**\n    * @property {Signal} signal - Reference to Signal object that listener is currently bound to.\n    * @private\n    */\n    this.signal = signal;\n\n    /**\n    * @property {number} _priority - Listener priority.\n    * @private\n    */\n    this._priority = priority || 0;\n  }\n  /**\n  * Call listener passing arbitrary parameters.\n  * If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.\n  * @method SignalBinding#execute\n  * @param {array} [paramsArr] - Array of parameters that should be passed to the listener.\n  * @return {any} Value returned by the listener.\n  */\n  execute(paramsArr) {\n\n    var handlerReturn, params;\n\n    if (SignalBinding.active && !!this._listener) {\n      params = this.params ? this.params.concat(paramsArr) : paramsArr;\n      handlerReturn = this._listener.apply(this.context, params);\n\n      if (this.isOnce) {\n        this.detach();\n      }\n    }\n\n    return handlerReturn;\n\n  }\n\n  /**\n  * Detach binding from signal.\n  * alias to: @see mySignal.remove(myBinding.listener);\n  * @method SignalBinding#detach\n  * @return|null} Handle bound to the signal or `null` if binding was previously detached.\n  */\n  detach() {\n    return this.isBound() ? this.signal.remove(this._listener, this.context) : null;\n  }\n\n  /**\n  * @method SignalBinding#isBound\n  * @return {boolean} True if binding is still bound to the signal and has a listener.\n  */\n  isBound() {\n    return (!!this.signal && !!this._listener);\n  }\n\n  /**\n  * Delete instance properties\n  * @method SignalBinding#_destroy\n  * @private\n  */\n  _destroy() {\n    delete this.signal;\n    delete this._listener;\n    delete this.context;\n  }\n\n  /**\n  * @method SignalBinding#toString\n  * @return {string} String representation of the object.\n  */\n  toString() {\n    return '[SignalBinding isOnce:' + this.isOnce + ', isBound:' + this.isBound() + ', active:' + SignalBinding.active + ']';\n  }\n}\n\n/**\n      * If binding is active and should be executed.\n      * @property {boolean} active\n      * @default\n      */\nSignalBinding.active = true;\n\n/**\n* Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute` (curried parameters).\n* @property {array|null} params\n* @default\n*/\nSignalBinding.params = null;\n\n/**\n    * @author       Miller Medeiros http://millermedeiros.github.com/js-signals/\n    * @author       Richard Davey <rich@photonstorm.com>\n    * @copyright    2014 Photon Storm Ltd.\n    * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n    */\n\n/**\n* A Signal is used for object communication via a custom broadcaster instead of Events.\n*\n* @class Signal\n* @constructor\n*/\nexport default class Signal {\n  constructor() {\n    /**\n        * @property {Array.<SignalBinding>} _bindings - Internal variable.\n        * @private\n        */\n    this._bindings = [];\n\n    /**\n    * @property {any} _prevParams - Internal variable.\n    * @private\n    */\n    this._prevParams = null;\n\n    /*\n    // enforce dispatch to aways work on same context (#47)\n    var self = this;\n\n    /**\n    * @property } dispatch - The dispatch is what sends the Signal out.\n    //*\n    this.dispatch = () => {\n      this.prototype.dispatch.apply(self, arguments);\n    };*/\n  }\n  /**\n  * @method Signal#validateListener\n  * @param } listener - Signal handler.\n  * @param {string} fnName - name.\n  * @private\n  */\n  validateListener(listener, fnName) {\n    if (typeof listener !== 'function') {\n      throw new Error('Signal: listener is a required param of {fn}() and should be a.'.replace('{fn}', fnName));\n    }\n  }\n\n  /**\n  * @method Signal#_registerListener\n  * @private\n  * @param } listener - Signal handler.\n  * @param {boolean} isOnce - Should the listener only be called once?\n  * @param {object} [listenerContext] - The context under which the listener is invoked.\n  * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0).\n  * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n  */\n  _registerListener(listener, isOnce, listenerContext, priority) {\n    var prevIndex = this._indexOfListener(listener, listenerContext);\n    var binding;\n\n    if (prevIndex !== -1) {\n      binding = this._bindings[prevIndex];\n\n      if (binding.isOnce !== isOnce) {\n        throw new Error('You cannot add' + (isOnce ? '' : 'Once') + '() then add' + (!isOnce ? '' : 'Once') + '() the same listener without removing the relationship first.');\n      }\n    }\n    else {\n      binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n      this._addBinding(binding);\n    }\n\n    if (Signal.memorize && this._prevParams) {\n      binding.execute(this._prevParams);\n    }\n\n    return binding;\n  }\n\n  /**\n  * @method Signal#_addBinding\n  * @private\n  * @param {SignalBinding} binding - An Object representing the binding between the Signal and listener.\n  */\n  _addBinding(binding) {\n    //  Simplified insertion sort\n    var n = this._bindings.length;\n\n    do {\n      n--;\n    }\n    while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n\n    this._bindings.splice(n + 1, 0, binding);\n  }\n\n  /**\n  * @method Signal#_indexOfListener\n  * @private\n  * @param } listener - Signal handler.\n  * @return {number} The index of the listener within the private bindings array.\n  */\n  _indexOfListener(listener, context) {\n    var n = this._bindings.length;\n    var cur;\n\n    while (n--) {\n      cur = this._bindings[n];\n\n      if (cur._listener === listener && cur.context === context) {\n        return n;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n  * Check if listener was attached to Signal.\n  *\n  * @method Signal#has\n  * @param } listener - Signal handler.\n  * @param {object} [context] - Context on which listener will be executed (object that should represent the `this` variable inside listener).\n  * @return {boolean} If Signal has the specified listener.\n  */\n  has(listener, context) {\n    return this._indexOfListener(listener, context) !== -1;\n  }\n\n  /**\n  * Add a listener to the signal.\n  *\n  * @method Signal#add\n  * @param } listener - The to call when this Signal is dispatched.\n  * @param {object} [listenerContext] - The context under which the listener will be executed (i.e. the object that should represent the `this` variable).\n  * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)\n  * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n  */\n  add(listener, listenerContext, priority) {\n    this.validateListener(listener, 'add');\n\n    return this._registerListener(listener, false, listenerContext, priority);\n  }\n\n  /**\n  * Add listener to the signal that should be removed after first execution (will be executed only once).\n  *\n  * @method Signal#addOnce\n  * @param } listener - The to call when this Signal is dispatched.\n  * @param {object} [listenerContext] - The context under which the listener will be executed (i.e. the object that should represent the `this` variable).\n  * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)\n  * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n  */\n  addOnce(listener, listenerContext, priority) {\n    this.validateListener(listener, 'addOnce');\n\n    return this._registerListener(listener, true, listenerContext, priority);\n  }\n\n  /**\n  * Remove a single listener from the dispatch queue.\n  *\n  * @method Signal#remove\n  * @param } listener - Handler that should be removed.\n  * @param {object} [context] - Execution context (since you can add the same handler multiple times if executing in a different context).\n  * @return } Listener handler.\n  */\n  remove(listener, context) {\n    this.validateListener(listener, 'remove');\n\n    var i = this._indexOfListener(listener, context);\n\n    if (i !== -1) {\n      this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n      this._bindings.splice(i, 1);\n    }\n\n    return listener;\n  }\n\n  /**\n  * Remove all listeners from the Signal.\n  *\n  * @method Signal#removeAll\n  * @param {object} [context=null] - If specified only listeners for the given context will be removed.\n  */\n  removeAll(context) {\n    if (typeof context === 'undefined') { context = null; }\n\n    var n = this._bindings.length;\n\n    while (n--) {\n      if (context) {\n        if (this._bindings[n].context === context) {\n          this._bindings[n]._destroy();\n          this._bindings.splice(n, 1);\n        }\n      }\n      else {\n        this._bindings[n]._destroy();\n      }\n    }\n\n    if (!context) {\n      this._bindings.length = 0;\n    }\n  }\n\n  /**\n  * Gets the total number of listeneres attached to ths Signal.\n  *\n  * @method Signal#getNumListeners\n  * @return {number} Number of listeners attached to the Signal.\n  */\n  getNumListeners() {\n    return this._bindings.length;\n  }\n\n  /**\n  * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n  * IMPORTANT: should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.\n  * @see Signal.prototype.disable\n  *\n  * @method Signal#halt\n  */\n  halt() {\n    Signal._shouldPropagate = false;\n  }\n\n  /**\n  * Dispatch/Broadcast Signal to all listeners added to the queue.\n  *\n  * @method Signal#dispatch\n  * @param {any} [params] - Parameters that should be passed to each handler.\n  */\n  dispatch() {\n    if (!Signal.active) {\n      return;\n    }\n\n    var paramsArr = Array.prototype.slice.call(arguments);\n    var n = this._bindings.length;\n    var bindings;\n\n    if (Signal.memorize) {\n      this._prevParams = paramsArr;\n    }\n\n    if (!n) {\n      //  Should come after memorize\n      return;\n    }\n\n    bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n    Signal._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n    //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n    //reverse loop since listeners with higher priority will be added at the end of the list\n    do {\n      n--;\n    }\n    while (bindings[n] && Signal._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n  }\n\n  /**\n  * Forget memorized arguments.\n  * @see Signal.memorize\n  *\n  * @method Signal#forget\n  */\n  forget() {\n    this._prevParams = null;\n  }\n\n  /**\n  * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n  * IMPORTANT: calling any method on the signal instance after calling dispose will throw errors.\n  *\n  * @method Signal#dispose\n  */\n  dispose() {\n    this.removeAll();\n\n    delete this._bindings;\n    delete this._prevParams;\n  }\n\n  /**\n  *\n  * @method Signal#toString\n  * @return {string} String representation of the object.\n  */\n  toString() {\n    return '[Signal active:' + this.active + ' numListeners:' + this.getNumListeners() + ']';\n  }\n}\n/**\n        * If Signal should keep record of previously dispatched parameters and\n        * automatically execute listener during `add()`/`addOnce()` if Signal was\n        * already dispatched before.\n        * @property {boolean} memorize\n        */\nSignal.memorize = false;\n\n/**\n* @property {boolean} _shouldPropagate\n* @private\n*/\nSignal._shouldPropagate = true;\n\n/**\n* If Signal is active and should broadcast events.\n* IMPORTANT: Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.\n* @property {boolean} active\n* @default\n*/\nSignal.active = true;","import TM from '../tm';\n/*\n\tA* path-finder based upon http://www.redblobgames.com/pathfinding/a-star/introduction.html\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\n// 'utils/Tools', 'lib/LinkedList'\nexport default class AStarFinder {\n  constructor(finderConfig) {\n    finderConfig = finderConfig || {};\n\n    var settings = {\n      allowDiagonal: false,\n      heuristicFilter: null\n    };\n    settings = TM.Tools.merge(settings, finderConfig);\n\n    this.allowDiagonal = settings.allowDiagonal;\n    this.heuristicFilter = settings.heuristicFilter;\n\n    this.list = new TM.LinkedList();\n  }\n  /*\n\t\tFind and return the path.\n\t\t@return Array<Cell> The path, including both start and end positions. Null if it failed.\n\t */\n  findPath(startNode, endNode, heuristic, grid) {\n    var current, costSoFar, neighbors, n, i, l;\n    heuristic = heuristic || this.heuristicFilter;\n    // clear old values from previous finding\n    grid.clearPath();\n    this.list.clear();\n\n    // push the start current into the open list\n    this.list.add(startNode);\n\n    // while the open list is not empty\n    while (this.list.length > 0) {\n      // sort so lowest cost is first\n      this.list.sort(this.compare);\n\n      // pop the position of current which has the minimum `_calcCost` value.\n      current = this.list.shift();\n      current._visited = true;\n\n      // if reached the end position, construct the path and return it\n      if (current === endNode) {\n        return TM.PathUtil.backtrace(endNode);\n      }\n\n      // cycle through each neighbor of the current current\n      neighbors = grid.getNeighbors(current, this.allowDiagonal, heuristic);\n      for (i = 0, l = neighbors.length; i < l; i++) {\n        n = neighbors[i];\n\n        if (!n.walkable) {\n          continue;\n        }\n\n        costSoFar = current._calcCost + grid.distance(current, n);\n\n        // check if the neighbor has not been inspected yet, or can be reached with smaller cost from the current node\n        if (!n._visited || costSoFar < n._calcCost) {\n          n._visited = true;\n          n._parent = current;\n          n._calcCost = costSoFar;\n          // console.log(n);\n          // _priority is the most important property, since it makes the algorithm \"greedy\" and seek the goal.\n          // otherwise it behaves like a brushfire/breadth-first\n          n._priority = costSoFar + grid.distance(endNode, n);\n\n          // check neighbor if it's the end current as well--often cuts steps by a significant amount\n          if (n === endNode) {\n            return TM.PathUtil.backtrace(endNode);\n          }\n          // console.log(n);\n          this.list.add(n);\n        }\n        // console.log(this.list);\n      } // end for each neighbor\n    } // end while not open list empty\n    // failed to find the path\n    return null;\n  }\n\n  compare(nodeA, nodeB) {\n    return nodeA._priority - nodeB._priority;\n  }\n}","/*\n\t@source https://github.com/qiao/PathFinding.js/\n*/\nexport default class PathUtil {\n  /**\n\t * Backtrace according to the parent records and return the path.\n\t * (including both start and end nodes)\n\t * @param {Node} node End node\n\t * @return {Array.<Array.<number>>} the path\n\t */\n  backtrace(node) {\n    var path = [node];\n    while (node._parent) {\n      node = node._parent;\n      path.push(node);\n    }\n    return path.reverse();\n  }\n\n  /**\n   * Backtrace from start and end node, and return the path.\n   * (including both start and end nodes)\n   * @param {Node}\n   * @param {Node}\n   */\n  biBacktrace(nodeA, nodeB) {\n    var pathA = this.backtrace(nodeA),\n      pathB = this.backtrace(nodeB);\n    return pathA.concat(pathB.reverse());\n  }\n\n  /**\n   * Compute the length of the path.\n   * @param {Array.<Array.<number>>} path The path\n   * @return {number} The length of the path\n   */\n  pathLength(path) {\n    var i, sum = 0, a, b, dx, dy;\n    for (i = 1; i < path.length; ++i) {\n      a = path[i - 1];\n      b = path[i];\n      dx = a[0] - b[0];\n      dy = a[1] - b[1];\n      sum += Math.sqrt(dx * dx + dy * dy);\n    }\n    return sum;\n  }\n\n\n  /**\n   * Given the start and end coordinates, return all the coordinates lying\n   * on the line formed by these coordinates, based on Bresenham's algorithm.\n   * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\n   * @param {number} x0 Start x coordinate\n   * @param {number} y0 Start y coordinate\n   * @param {number} x1 End x coordinate\n   * @param {number} y1 End y coordinate\n   * @return {Array.<Array.<number>>} The coordinates on the line\n   */\n  interpolate(x0, y0, x1, y1) {\n    var abs = Math.abs,\n      line = [],\n      sx, sy, dx, dy, err, e2;\n\n    dx = abs(x1 - x0);\n    dy = abs(y1 - y0);\n\n    sx = (x0 < x1) ? 1 : -1;\n    sy = (y0 < y1) ? 1 : -1;\n\n    err = dx - dy;\n\n    while (x0 !== x1 || y0 !== y1) {\n      line.push([x0, y0]);\n\n      e2 = 2 * err;\n      if (e2 > -dy) {\n        err = err - dy;\n        x0 = x0 + sx;\n      }\n      if (e2 < dx) {\n        err = err + dx;\n        y0 = y0 + sy;\n      }\n    }\n\n    return line;\n  }\n\n\n  /**\n   * Given a compressed path, return a new path that has all the segments\n   * in it interpolated.\n   * @param {Array.<Array.<number>>} path The path\n   * @return {Array.<Array.<number>>} expanded path\n   */\n  expandPath(path) {\n    var expanded = [],\n      len = path.length,\n      coord0, coord1,\n      interpolated,\n      interpolatedLen,\n      i, j;\n\n    if (len < 2) {\n      return expanded;\n    }\n\n    for (i = 0; i < len - 1; ++i) {\n      coord0 = path[i];\n      coord1 = path[i + 1];\n\n      interpolated = this.interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\n      interpolatedLen = interpolated.length;\n      for (j = 0; j < interpolatedLen - 1; ++j) {\n        expanded.push(interpolated[j]);\n      }\n    }\n    expanded.push(path[len - 1]);\n\n    return expanded;\n  }\n\n\n  /**\n   * Smoothen the give path.\n   * The original path will not be modified; a new path will be returned.\n   * @param {PF.Grid} grid\n   * @param {Array.<Array.<number>>} path The path\n   */\n  smoothenPath(grid, path) {\n    var len = path.length,\n      x0 = path[0][0],        // path start x\n      y0 = path[0][1],        // path start y\n      x1 = path[len - 1][0],  // path end x\n      y1 = path[len - 1][1],  // path end y\n      sx, sy,                 // current start coordinate\n      ex, ey,                 // current end coordinate\n      newPath,\n      lastValidCoord,\n      i, j, coord, line, testCoord, blocked;\n\n    sx = x0;\n    sy = y0;\n    newPath = [[sx, sy]];\n\n    for (i = 2; i < len; ++i) {\n      coord = path[i];\n      ex = coord[0];\n      ey = coord[1];\n      line = this.interpolate(sx, sy, ex, ey);\n\n      blocked = false;\n      for (j = 1; j < line.length; ++j) {\n        testCoord = line[j];\n\n        if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\n          blocked = true;\n          break;\n        }\n      }\n      if (blocked) {\n        lastValidCoord = path[i - 1];\n        newPath.push(lastValidCoord);\n        sx = lastValidCoord[0];\n        sy = lastValidCoord[1];\n      }\n    }\n    newPath.push([x1, y1]);\n\n    return newPath;\n  }\n\n\n  /**\n   * Compress a path, remove redundant nodes without altering the shape\n   * The original path is not modified\n   * @param {Array.<Array.<number>>} path The path\n   * @return {Array.<Array.<number>>} The compressed path\n   */\n  compressPath(path) {\n\n    // nothing to compress\n    if (path.length < 3) {\n      return path;\n    }\n\n    var compressed = [],\n      sx = path[0][0], // start x\n      sy = path[0][1], // start y\n      px = path[1][0], // second point x\n      py = path[1][1], // second point y\n      dx = px - sx, // direction between the two points\n      dy = py - sy, // direction between the two points\n      lx, ly,\n      ldx, ldy,\n      sq, i;\n\n    // normalize the direction\n    sq = Math.sqrt(dx * dx + dy * dy);\n    dx /= sq;\n    dy /= sq;\n\n    // start the new path\n    compressed.push([sx, sy]);\n\n    for (i = 2; i < path.length; i++) {\n\n      // store the last point\n      lx = px;\n      ly = py;\n\n      // store the last direction\n      ldx = dx;\n      ldy = dy;\n\n      // next point\n      px = path[i][0];\n      py = path[i][1];\n\n      // next direction\n      dx = px - lx;\n      dy = py - ly;\n\n      // normalize\n      sq = Math.sqrt(dx * dx + dy * dy);\n      dx /= sq;\n      dy /= sq;\n\n      // if the direction has changed, store the point\n      if (dx !== ldx || dy !== ldy) {\n        compressed.push([lx, ly]);\n      }\n    }\n\n    // store the last point\n    compressed.push([px, py]);\n\n    return compressed;\n  }\n}","import * as THREE from 'three';\n\nconst Loader = {\n  manager: null,\n  imageLoader: null,\n  crossOrigin: false,\n\n  init: function (crossOrigin) {\n    this.crossOrigin = crossOrigin || false;\n\n    this.manager = new THREE.LoadingManager(function () {\n      // called when all images are loaded, so call your state manager or something\n    }, function () {\n      // noop\n    }, function () {\n      console.warn('Error loading images');\n    });\n\n    this.imageLoader = new THREE.ImageLoader(this.manager);\n    this.imageLoader.crossOrigin = crossOrigin;\n  },\n\n  loadTexture: function (url, mapping, onLoad, onError) {\n    var texture = new THREE.Texture(null, mapping);\n    this.imageLoader.load(url, function (image) { // on load\n      texture.image = image;\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture);\n    },\n      null, // on progress\n      function (evt) { // on error\n        if (onError) onError(evt);\n      });\n    texture.sourceFile = url;\n\n    return texture;\n  }\n}\n\nexport default Loader;","import TM from '../tm';\nimport * as THREE from 'three';\n/*\n\tTranslates mouse interactivity into 3D positions, so we can easily pick objects in the scene.\n\n\tLike everything else in ThreeJS, ray casting creates a ton of new objects each time it's used. This contributes to frequent garbage collections (causing frame hitches), so if you're limited to low-end hardware like mobile, it would be better to only update it when the user clicks, instead of every frame (so no hover effects, but on mobile those don't work anyway). You'll want to create a version that handles touch anyway.\n\n\tgroup - any Object3D (Scene, Group, Mesh, Sprite, etc) that the mouse will cast against\n\tcamera - the camera to cast from\n\t[element] - optional element to attach mouse event to\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nclass MouseCaster {\n  constructor(group, camera, element) {\n    this.down = false; // left click\n    this.rightDown = false;\n    // the object that was just clicked on\n    this.pickedObject = null;\n    // the object currently being 'held'\n    this.selectedObject = null;\n    // store the results of the last cast\n    this.allHits = null;\n    // disable the caster easily to temporarily prevent user input\n    this.active = true;\n\n    this.shift = false;\n    this.ctrl = false;\n    this.wheel = 0;\n\n    // you can track exactly where the mouse is in the 3D scene by using the z component\n    this.position = new THREE.Vector3();\n    this.screenPosition = new THREE.Vector2();\n    this.signal = new TM.Signal();\n    this.group = group;\n\n    // behind-the-scenes stuff you shouldn't worry about\n    this._camera = camera;\n    this._raycaster = new THREE.Raycaster();\n    this._preventDefault = false;\n\n    element = element || document;\n\n    element.addEventListener('mousemove', this._onDocumentMouseMove.bind(this), false);\n    element.addEventListener('mousedown', this._onDocumentMouseDown.bind(this), false);\n    element.addEventListener('mouseup', this._onDocumentMouseUp.bind(this), false);\n    element.addEventListener('mousewheel', this._onMouseWheel.bind(this), false);\n    element.addEventListener('DOMMouseScroll', this._onMouseWheel.bind(this), false); // firefox\n  }\n  update() {\n    if (!this.active) {\n      return;\n    }\n    this._raycaster.setFromCamera(this.screenPosition, this._camera);\n\n    var intersects = this._raycaster.intersectObject(this.group, true);\n    var hit, obj;\n\n    if (intersects.length > 0) {\n      // get the first object under the mouse\n      hit = intersects[0];\n      obj = hit.object.userData.structure;\n      if (this.pickedObject != obj) {\n        // the first object changed, meaning there's a different one, or none at all\n        if (this.pickedObject) {\n          // it's a new object, notify the old object is going away\n          this.signal.dispatch('out', this.pickedObject);\n        }\n        /*else {\n          // hit a new object when nothing was there previously\n        }*/\n        this.pickedObject = obj;\n        this.selectedObject = null; // cancel click, otherwise it'll confuse the user\n\n        this.signal.dispatch('over', this.pickedObject);\n      }\n      this.position.copy(hit.point);\n      this.screenPosition.z = hit.distance;\n    }\n    else {\n      // there isn't anything under the mouse\n      if (this.pickedObject) {\n        // there was though, we just moved out\n        this.signal.dispatch('out', this.pickedObject);\n      }\n      this.pickedObject = null;\n      this.selectedObject = null;\n    }\n\n    this.allHits = intersects;\n  }\n\n  preventDefault() {\n    this._preventDefault = true;\n  }\n\n  _onDocumentMouseDown(evt) {\n    evt = evt || window.event;\n    evt.preventDefault();\n    if (this._preventDefault) {\n      this._preventDefault = false;\n      return false;\n    }\n    if (this.pickedObject) {\n      this.selectedObject = this.pickedObject;\n    }\n    this.shift = evt.shiftKey;\n    this.ctrl = evt.ctrlKey;\n\n    this.down = evt.which === 1;\n    this.rightDown = evt.which === 3;\n\n    this.signal.dispatch('down', this.pickedObject);\n  }\n\n  _onDocumentMouseUp(evt) {\n    evt.preventDefault();\n    if (this._preventDefault) {\n      this._preventDefault = false;\n      return false;\n    }\n    this.shift = evt.shiftKey;\n    this.ctrl = evt.ctrlKey;\n\n    this.signal.dispatch('up', this.pickedObject);\n    if (this.selectedObject && this.pickedObject && this.selectedObject.uniqueID === this.pickedObject.uniqueID) {\n      this.signal.dispatch('click', this.pickedObject);\n    }\n\n    this.down = evt.which === 1 ? false : this.down;\n    this.rightDown = evt.which === 3 ? false : this.rightDown;\n  }\n\n  _onDocumentMouseMove(evt) {\n    evt.preventDefault();\n    this.screenPosition.x = (evt.clientX / window.innerWidth) * 2 - 1;\n    this.screenPosition.y = -(evt.clientY / window.innerHeight) * 2 + 1;\n  }\n\n  _onMouseWheel(evt) {\n    if (!this.active) {\n      return;\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    var delta = 0;\n    if (evt.wheelDelta !== undefined) { // WebKit / Opera / Explorer 9\n      delta = evt.wheelDelta;\n    }\n    else if (evt.detail !== undefined) { // Firefox\n      delta = -evt.detail;\n    }\n    if (delta > 0) {\n      this.wheel++;\n    }\n    else {\n      this.wheel--;\n    }\n    // console.log(this.wheel);\n    this.signal.dispatch('wheel', this.wheel);\n  }\n}\n\nMouseCaster.OVER = 'over';\nMouseCaster.OUT = 'out';\nMouseCaster.DOWN = 'down';\nMouseCaster.UP = 'up';\nMouseCaster.CLICK = 'click'; // only fires if the user clicked down and up while on the same object\nMouseCaster.WHEEL = 'wheel';\n\nexport default MouseCaster;","import TM from '../tm';\nimport * as THREE from 'three';\nimport OrbitControls from 'three-orbitcontrols'\n/*\n\tSets up and manages a THREEjs container, camera, and light, making it easy to get going.\n\tAlso provides camera control.\n\n\tAssumes full screen.\n */\n// 'utils/Tools'\nexport default class Scene {\n  constructor(sceneConfig, controlConfig) {\n    var sceneSettings = {\n      element: document.body,\n      alpha: true,\n      antialias: true,\n      clearColor: '#fff',\n      sortObjects: false,\n      fog: null,\n      light: new THREE.DirectionalLight(0xffffff),\n      lightPosition: null,\n      cameraType: 'PerspectiveCamera',\n      cameraPosition: null, // {x, y, z}\n      orthoZoom: 4\n    };\n\n    var controlSettings = {\n      minDistance: 100,\n      maxDistance: 1000,\n      zoomSpeed: 2,\n      noZoom: false\n    };\n\n    sceneSettings = TM.Tools.merge(sceneSettings, sceneConfig);\n    if (typeof controlConfig !== 'boolean') {\n      controlSettings = TM.Tools.merge(controlSettings, controlConfig);\n    }\n\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: sceneSettings.alpha,\n      antialias: sceneSettings.antialias\n    });\n    this.renderer.setClearColor(sceneSettings.clearColor, 0);\n    this.renderer.sortObjects = sceneSettings.sortObjects;\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n\n    this.orthoZoom = sceneSettings.orthoZoom;\n\n    this.container = new THREE.Scene();\n    this.container.fog = sceneSettings.fog;\n\n    this.container.add(new THREE.AmbientLight(0xdddddd));\n\n    if (!sceneSettings.lightPosition) {\n      sceneSettings.light.position.set(-1, 1, -1).normalize();\n    }\n    this.container.add(sceneSettings.light);\n\n    if (sceneSettings.cameraType === 'OrthographicCamera') {\n      var width = window.innerWidth / this.orthoZoom;\n      var height = window.innerHeight / this.orthoZoom;\n      this.camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, 1, 5000);\n    }\n    else {\n      this.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 5000);\n    }\n\n    this.contolled = !!controlConfig;\n    if (this.contolled) {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.controls.minDistance = controlSettings.minDistance;\n      this.controls.maxDistance = controlSettings.maxDistance;\n      this.controls.zoomSpeed = controlSettings.zoomSpeed;\n      this.controls.noZoom = controlSettings.noZoom;\n    }\n\n    if (sceneSettings.cameraPosition) {\n      this.camera.position.copy(sceneSettings.cameraPosition);\n    }\n\n    window.addEventListener('resize', function onWindowResize() {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      if (this.camera.type === 'OrthographicCamera') {\n        var width = this.width / this.orthoZoom;\n        var height = this.height / this.orthoZoom;\n        this.camera.left = width / -2;\n        this.camera.right = width / 2;\n        this.camera.top = height / 2;\n        this.camera.bottom = height / -2;\n      }\n      else {\n        this.camera.aspect = this.width / this.height;\n      }\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(this.width, this.height);\n    }.bind(this), false);\n\n    this.attachTo(sceneSettings.element);\n  }\n\n  attachTo(element) {\n    element.style.width = this.width + 'px';\n    element.style.height = this.height + 'px';\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    element.appendChild(this.renderer.domElement);\n  }\n\n  add(mesh) {\n    this.container.add(mesh);\n  }\n\n  remove(mesh) {\n    this.container.remove(mesh);\n  }\n\n  render() {\n    if (this.contolled) this.controls.update();\n    this.renderer.render(this.container, this.camera);\n  }\n\n  updateOrthoZoom() {\n    if (this.orthoZoom <= 0) {\n      this.orthoZoom = 0;\n      return;\n    }\n    var width = this.width / this.orthoZoom;\n    var height = this.height / this.orthoZoom;\n    this.camera.left = width / -2;\n    this.camera.right = width / 2;\n    this.camera.top = height / 2;\n    this.camera.bottom = height / -2;\n    this.camera.updateProjectionMatrix();\n  }\n\n  focusOn(obj) {\n    this.camera.lookAt(obj.position);\n  }\n}","import TM from '../tm';\n// 'utils/Tools', 'lib/LinkedList', 'utils/MouseCaster', 'lib/Signal'\nexport default class SelectionManager {\n  constructor(mouse) {\n    this.mouse = mouse;\n\n    this.onSelect = new TM.Signal();\n    this.onDeselect = new TM.Signal();\n\n    this.selected = null;\n    // deselect if player clicked on the same thing twice\n    this.toggleSelection = false;\n\n    // allow multiple entities to be selected at once\n    // this.multiselect = false; // todo\n    // this.allSelected = new LinkedList();\n\n    this.mouse.signal.add(this.onMouse, this);\n  }\n  select(obj, fireSignal) {\n    if (!obj) return;\n    fireSignal = fireSignal || true;\n\n    if (this.selected !== obj) {\n      // deselect previous object\n      this.clearSelection(fireSignal);\n    }\n    if (obj.selected) {\n      if (this.toggleSelection) {\n        if (fireSignal) {\n          this.onDeselect.dispatch(obj);\n        }\n        obj.deselect();\n      }\n    }\n    else {\n      obj.select();\n    }\n\n    this.selected = obj;\n    if (fireSignal) {\n      this.onSelect.dispatch(obj);\n    }\n  }\n\n  clearSelection(fireSignal) {\n    fireSignal = fireSignal || true;\n    if (this.selected) {\n      if (fireSignal) {\n        this.onDeselect.dispatch(this.selected);\n      }\n      this.selected.deselect();\n    }\n    this.selected = null;\n  }\n\n  onMouse(type, obj) {\n    switch (type) {\n      case TM.MouseCaster.DOWN:\n        if (!obj) {\n          this.clearSelection();\n        }\n        break;\n\n      case TM.MouseCaster.CLICK:\n        this.select(obj);\n        break;\n    }\n  }\n}","\nexport const Tools = {\n  clamp: function (val, min, max) {\n    return Math.max(min, Math.min(max, val));\n  },\n\n  sign: function (val) {\n    return val && val / Math.abs(val);\n  },\n\n\t/**\n\t * If one value is passed, it will return something from -val to val.\n\t * Else it returns a value between the range specified by min, max.\n\t */\n  random: function (min, max) {\n    if (arguments.length === 1) {\n      return (Math.random() * min) - (min * 0.5);\n    }\n    return Math.random() * (max - min) + min;\n  },\n\n  // from min to (and including) max\n  randomInt: function (min, max) {\n    if (arguments.length === 1) {\n      return (Math.random() * min) - (min * 0.5) | 0;\n    }\n    return (Math.random() * (max - min + 1) + min) | 0;\n  },\n\n  normalize: function (v, min, max) {\n    return (v - min) / (max - min);\n  },\n\n  getShortRotation: function (angle) {\n    angle %= this.TAU;\n    if (angle > this.PI) {\n      angle -= this.TAU;\n    }\n    else if (angle < -this.PI) {\n      angle += this.TAU;\n    }\n    return angle;\n  },\n\n  generateID: function () {\n    return Math.random().toString(36).slice(2) + Date.now();\n  },\n\n  isPlainObject: function (obj) {\n    if (typeof (obj) !== 'object' || obj.nodeType || obj === obj.window) {\n      return false;\n    }\n    // The try/catch suppresses exceptions thrown when attempting to access the 'constructor' property of certain host objects, ie. |window.location|\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=814622\n    try {\n      if (obj.constructor && !Object.prototype.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\n        return false;\n      }\n    }\n    catch (err) {\n      return false;\n    }\n    // If the function hasn't returned already, we're confident that\n    // |obj| is a plain object, created by {} or constructed with new Object\n    return true;\n  },\n\n  // https://github.com/KyleAMathews/deepmerge/blob/master/index.js\n  merge: function (target, src) {\n    var self = this, array = Array.isArray(src);\n    var dst = array && [] || {};\n    if (array) {\n      target = target || [];\n      dst = dst.concat(target);\n      src.forEach(function (e, i) {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        }\n        else if (self.isPlainObject(e)) {\n          dst[i] = self.merge(target[i], e);\n        }\n        else {\n          if (target.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n      return dst;\n    }\n    if (target && self.isPlainObject(target)) {\n      Object.keys(target).forEach(function (key) {\n        dst[key] = target[key];\n      });\n    }\n    Object.keys(src).forEach(function (key) {\n      if (!src[key] || !self.isPlainObject(src[key])) {\n        dst[key] = src[key];\n      }\n      else {\n        if (!target[key]) {\n          dst[key] = src[key];\n        }\n        else {\n          dst[key] = self.merge(target[key], src[key]);\n        }\n      }\n    });\n    return dst;\n  },\n\n  now: function () {\n    return window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n  },\n\n  empty: function (node) {\n    while (node.lastChild) {\n      node.removeChild(node.lastChild);\n    }\n  },\n\n\t/*\n\t\t@source: http://jsperf.com/radix-sort\n\t */\n  radixSort: function (arr, idxBegin, idxEnd, bit) {\n    idxBegin = idxBegin || 0;\n    idxEnd = idxEnd || arr.length;\n    bit = bit || 31;\n    if (idxBegin >= (idxEnd - 1) || bit < 0) {\n      return;\n    }\n    var idx = idxBegin;\n    var idxOnes = idxEnd;\n    var mask = 0x1 << bit;\n    while (idx < idxOnes) {\n      if (arr[idx] & mask) {\n        --idxOnes;\n        var tmp = arr[idx];\n        arr[idx] = arr[idxOnes];\n        arr[idxOnes] = tmp;\n      }\n      else {\n        ++idx;\n      }\n    }\n    this.radixSort(arr, idxBegin, idxOnes, bit - 1);\n    this.radixSort(arr, idxOnes, idxEnd, bit - 1);\n  },\n\n  randomizeRGB: function (base, range) {\n    var rgb = base.split(',');\n    var color = 'rgb(';\n    var i, c;\n    range = this.randomInt(range);\n    for (i = 0; i < 3; i++) {\n      c = parseInt(rgb[i]) + range;\n      if (c < 0) c = 0;\n      else if (c > 255) c = 255;\n      color += c + ',';\n    }\n    color = color.substring(0, color.length - 1);\n    color += ')';\n    return color;\n  },\n\n  getJSON: function (config) {\n    var xhr = new XMLHttpRequest();\n    var cache = typeof config.cache === 'undefined' ? false : config.cache;\n    var uri = cache ? config.url : config.url + '?t=' + Math.floor(Math.random() * 10000) + Date.now();\n    xhr.onreadystatechange = function () {\n      if (this.status === 200) {\n        var json = null;\n        try {\n          json = JSON.parse(this.responseText);\n        }\n        catch (err) {\n          // console.warn('[Tools.getJSON] Error: '+config.url+' is not a json resource');\n          return;\n        }\n        config.callback.call(config.scope || null, json);\n        return;\n      }\n      else if (this.status !== 0) {\n        console.warn('[Tools.getJSON] Error: ' + this.status + ' (' + this.statusText + ') :: ' + config.url);\n      }\n    }\n    xhr.open('GET', uri, true);\n    xhr.setRequestHeader('Accept', 'application/json');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.send('');\n  }\n}\n\nexport default Tools;","import * as THREE from 'three';\nimport TM from './tm';\n\nexport default class Board {\n  constructor(grid, finderConfig) {\n    if (!grid) throw new Error('You must pass in a grid system for the board to use.');\n\n    this.tiles = [];\n    this.tileGroup = null; // only for tiles\n\n    this.group = new THREE.Object3D(); // can hold all entities, also holds tileGroup, never trashed\n\n    this.grid = null;\n    this.overlay = null;\n    this.finder = new TM.AStarFinder(finderConfig);\n    // need to keep a resource cache around, so this Loader does that, use it instead of THREE.ImageUtils\n    TM.Loader.init();\n\n    this.setGrid(grid);\n  }\n  setEntityOnTile(entity, tile) {\n    // snap an entity's position to a tile; merely copies position\n    var pos = this.grid.cellToPixel(tile.cell);\n    entity.position.copy(pos);\n    // adjust for any offset after the entity was set directly onto the tile\n    entity.position.y += entity.heightOffset || 0;\n    // remove entity from old tile\n    if (entity.tile) {\n      entity.tile.entity = null;\n    }\n    // set new situation\n    entity.tile = tile;\n    tile.entity = entity;\n  }\n\n  addTile(tile) {\n    var i = this.tiles.indexOf(tile);\n    if (i === -1) this.tiles.push(tile);\n    else return;\n\n    this.snapTileToGrid(tile);\n    tile.position.y = 0;\n\n    this.tileGroup.add(tile.mesh);\n    this.grid.add(tile.cell);\n\n    tile.cell.tile = tile;\n  }\n\n  removeTile(tile) {\n    if (!tile) return; // was already removed somewhere\n    var i = this.tiles.indexOf(tile);\n    this.grid.remove(tile.cell);\n\n    if (i !== -1) this.tiles.splice(i, 1);\n    // this.tileGroup.remove(tile.mesh);\n\n    tile.dispose();\n  }\n\n  removeAllTiles() {\n    if (!this.tileGroup) return;\n    var tiles = this.tileGroup.children;\n    for (var i = 0; i < tiles.length; i++) {\n      this.tileGroup.remove(tiles[i]);\n    }\n  }\n\n  getTileAtCell(cell) {\n    var h = this.grid.cellToHash(cell);\n    return cell.tile || (typeof this.grid.cells[h] !== 'undefined' ? this.grid.cells[h].tile : null);\n  }\n\n  snapToGrid(pos) {\n    var cell = this.grid.pixelToCell(pos);\n    pos.copy(this.grid.cellToPixel(cell));\n  }\n\n  snapTileToGrid(tile) {\n    if (tile.cell) {\n      tile.position.copy(this.grid.cellToPixel(tile.cell));\n    }\n    else {\n      var cell = this.grid.pixelToCell(tile.position);\n      tile.position.copy(this.grid.cellToPixel(cell));\n    }\n    return tile;\n  }\n\n  getRandomTile() {\n    var i = TM.Tools.randomInt(0, this.tiles.length - 1);\n    return this.tiles[i];\n  }\n\n  findPath(startTile, endTile, heuristic) {\n    return this.finder.findPath(startTile.cell, endTile.cell, heuristic, this.grid);\n  }\n\n  setGrid(newGrid) {\n    this.group.remove(this.tileGroup);\n    if (this.grid && newGrid !== this.grid) {\n      this.removeAllTiles();\n      this.tiles.forEach(function (t) {\n        this.grid.remove(t.cell);\n        t.dispose();\n      });\n      this.grid.dispose();\n    }\n    this.grid = newGrid;\n    this.tiles = [];\n    this.tileGroup = new THREE.Object3D();\n    this.group.add(this.tileGroup);\n  }\n\n  generateOverlay(size) {\n    var mat = new THREE.LineBasicMaterial({\n      color: 0x000000,\n      opacity: 0.3\n    });\n\n    if (this.overlay) {\n      this.group.remove(this.overlay);\n    }\n\n    this.overlay = new THREE.Object3D();\n\n    this.grid.generateOverlay(size, this.overlay, mat);\n\n    this.group.add(this.overlay);\n  }\n\n  generateTilemap(config) {\n    this.reset();\n\n    var tiles = this.grid.generateTiles(config);\n    this.tiles = tiles;\n\n    this.tileGroup = new THREE.Object3D();\n    for (var i = 0; i < tiles.length; i++) {\n      this.tileGroup.add(tiles[i].mesh);\n    }\n\n    this.group.add(this.tileGroup);\n  }\n\n  reset() {\n    // removes all tiles from the scene, but leaves the grid intact\n    this.removeAllTiles();\n    if (this.tileGroup) this.group.remove(this.tileGroup);\n  }\n}","import Cell from './grids/Cell';\n//export { default as Cell } from './grids/Cell';\nimport HexGrid from './grids/HexGrid';\n//export { default as HexGrid } from './grids/HexGrid';\nimport SqrGrid from './grids/SqrGrid';\n//export { default as SqrGrid } from './grids/SqrGrid';\nimport Tile from './grids/Tile';\n//export { default as Tile } from './grids/Tile';\nimport LinkedList from './lib/LinkedList';\n//export { default as LinkedList } from './lib/LinkedList';\nimport Signal from './lib/Signal';\n//export { default as Signal } from './lib/Signal';\nimport AStarFinder from './pathing/AStarFinder';\n//export { default as AStarFinder } from './pathing/AStarFinder';\nimport PathUtil from './pathing/PathUtil';\n//export { default as PathUtil } from './pathing/PathUtil';\nimport Loader from './utils/Loader';\n//export { default as Loader } from './utils/Loader';\nimport MouseCaster from './utils/MouseCaster';\n//export { default as MouseCaster } from './utils/MouseCaster';\nimport Scene from './utils/Scene';\n//export { default as Scene } from './utils/Scene';\nimport SelectionManager from './utils/SelectionManager';\n//export { default as SelectionManager } from './utils/SelectionManager';\nimport Tools from './utils/Tools';\n//export { default as Tools } from './utils/Tools';\nimport Board from './Board';\n// export { default as Board } from './Board';\n\n\nexport const TM = {\n  VERSION: '1.0.0',\n\n  PI: Math.PI,\n  TAU: Math.PI * 2,\n  DEG_TO_RAD: 0.0174532925,\n  RAD_TO_DEG: 57.2957795,\n  SQRT3: Math.sqrt(3), // used often in hex conversions\n\n  Cell,\n  HexGrid,\n  SqrGrid,\n  Tile,\n  LinkedList,\n  Signal,\n  AStarFinder,\n  PathUtil,\n  Loader,\n  MouseCaster,\n  Scene,\n  SelectionManager,\n  Tools,\n  Board,\n\n  // useful enums for type checking. change to whatever fits your game. these are just examples\n  TILE: 'tile', // visual representation of a grid cell\n  ENT: 'entity', // dynamic things\n  STR: 'structure', // static things\n\n  HEX: 'hex',\n  SQR: 'square',\n  ABS: 'abstract',\n}\n\nexport default TM;","import React from 'react';\nimport './App.css';\nimport TM from './lib/tm.js';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.scene = new TM.Scene({\n      element: document.getElementById('view'),\n      cameraPosition: { x: 0, y: 150, z: 150 }\n    }, true);\n\n    // this constructs the cells in grid coordinate space\n    this.gridSpace = new TM.HexGrid({\n      cellSize: 15 // size of individual cells\n    });\n\n    this.gridSpace.generate({\n      size: 45 // size of the board\n    });\n\n    this.mouse = new TM.MouseCaster(this.scene.container, this.scene.camera);\n    this.board = new TM.Board(this.gridSpace);\n\n    // this will generate extruded hexagonal tiles\n    this.board.generateTilemap({\n      tileScale: 0.96 // you might have to scale the tile so the extruded geometry fits the cell size perfectly\n    });\n    //this.board.generateOverlay(10);\n\n    this.scene.add(this.board.group);\n    this.scene.focusOn(this.board.group);\n\n    this.mouse.signal.add(function (evt, tile) {\n      if (evt === TM.MouseCaster.CLICK) {\n        tile.toggle();\n        // or we can use the mouse's raw coordinates to access the cell directly, just for fun:\n        //var cell = this.board.grid.pixelToCell(this.mouse.position);\n        //var t = this.board.getTileAtCell(cell);\n        //if (t) t.toggle();\n      }\n    }, this);\n\n    this.update();\n  }\n  update() {\n    this.mouse.update();\n    this.scene.render();\n    requestAnimationFrame(() => {\n      this.update();\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div id='view'></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}